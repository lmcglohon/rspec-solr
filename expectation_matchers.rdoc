= SolrTestFramework Custom Matchers for RSpec

(rspec-solr_resp_hash..should ...  or rspec-solr_resp_hash..should_not ...)

== MATCHING WHETHER RESPONSE HAS DOCUMENTS OR NOT

 FIXME!!!!  is this about the total number of Solr documents that match ("numFound"), NOT solely the documents returned in the response

=== Matcher
* have_documents

=== Usage
* rspec-solr_resp_hash.should have_documents
* rspec-solr_resp_hash.should_not have_documents

== MATCHING NUMBER OF DOCUMENTS 

 NOTE:  this is about the total number of Solr documents that match ("numFound"), NOT solely the documents returned in the response

=== Matchers
* have(2).documents
* have_exactly(4).documents
* have_at_least(3).documents  
* have_at_most(3).documents

=== Usage
* rspec-solr_resp_hash.should have(3).documents
* rspec-solr_resp_hash.should_not have(2).documents
* rspec-solr_resp_hash.should have_at_least(3).documents
* rspec-solr_resp_hash.should have_at_most(4).documents

== MATCHING SPECIFIC DOCUMENTS IN RESPONSE

=== Matchers
the following are interchangeable:
* include()
* have_document()  
TODO:
* include(Array).in_first(n).results  (specify a series of docids)
* include().in_first(2).results
* include_at_least(3).of_these_documents().in_first(3).results

=== Usage
==== Specifying Single Document
* ("idval") 
 NOTE: value of the unique id field (defaults to 'id') in the Solr document
       To change the id field name, use my_solr_response_hash.id_field='my_id_fldname'
* ("fldname" => "value")
* ("fld1" => "val1", "fld2" => "val2")
 NOTE: single Solr document must have all key value pairs
* ("fldname" => ["val1", "val2", "val3"])
 NOTE: all of the Array values must be present for the fld in a single Solr document
       should_not for Array implies NONE of the values should be present in a single document
TODO:
* document("fldname" => "/regex/")
==== TODO: Specifying Multiple Documents

==== Full Examples
* rspec-solr_resp_hash.should have_document("fld1" => "val1")
* rspec-solr_resp_hash.should have_document("f1" => "v1", "f2" => ["val1", "val2", "val3"])
* rspec-solr_resp_hash.should include("idval")




== TODO: ORDER OF DOCUMENTS

=== Potential Syntax:
* rspec-solr_resp_hash.document().should come_before_document()
* rspec-solr_resp_hash.document().should come_before_document()
* rspec-solr_resp_hash.should include_document().before_document()
* subject.document(:title => 'vala').should come_before(subject.document(:title =>'valb'))
* subject.should have_result_field_ordered("title", "vala", "valb") 

=== Matchers
* include_document().before_document()
* include_documents().before_document()
* include_document().before_documents()
* include_documents().before_documents()

* include_document().within(3)_positions_of_document()


== TODO: FACET VALUES IN RESPONSE

=== Specifying Facet Values
* facet(:format => "Book")
* facets(:format => ["Image", "Map"])

=== Potential Syntax
rspec-solr_resp_hash.should include_facet

=== Matchers
* include_facet().before_facet()
* include_facets().before_facet()
* include_facet().before_facets()
* include_facets().before_facets()


== TODO: COMPARING TWO RESPONSES

=== Specifying Second Response
* than_solr_response({:q => "foo", :sort => "title"})  # solr params
* than_search_for("foo")  # only q is specified, defaults for everything else

=== Potential Syntax
rspec-solr_resp_hash.should

=== Matchers
* have_more_results_than_solr_response(:params)
* have_fewer_results_than_solr_response(:params)
* have_the_same_number_of_results_as_solr_response(:params)

